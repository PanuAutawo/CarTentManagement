import React, { useState } from "react";
import axios from "axios";
import "./customer-payment.css";

interface ReceiptButtonProps {
  paymentId?: number; // ‚úÖ ‡∏Å‡∏±‡∏ô undefined
}

const ReceiptButton: React.FC<ReceiptButtonProps> = ({ paymentId }) => {
  const [loading, setLoading] = useState(false);

  const fetchReceipt = async () => {
    if (!paymentId) {
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Payment ID");
      return;
    }

    try {
      setLoading(true);
      const res = await axios.get(`http://localhost:8080/api/receipts/${paymentId}`);

      if (res.data.length > 0) {
        // ‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        const receipt = res.data[0];
        if (receipt.link) {
          // ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå PDF
          window.open(`http://localhost:8080${receipt.link}`, "_blank");
        } else {
          alert("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
        }
      } else {
        alert("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏ô‡∏µ‡πâ");
      }
    } catch (error) {
      console.error("Fetch receipt failed", error);
      alert("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    } finally {
      setLoading(false);
    }
  };

  return (
    <button className="btn-secondary" onClick={fetchReceipt} disabled={loading}>
      {loading ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î..." : "üìÑ ‡∏î‡∏π‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à"}
    </button>
  );
};

export default ReceiptButton;
